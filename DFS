def dfs(graph, start):
    visited = set()
    result = []
    
    def dfs_helper(node):
        visited.add(node)
        result.append(node)
        for neighbor in graph[node]:
            if neighbor not in visited:
                dfs_helper(neighbor)
    
    dfs_helper(start)
    return result
graph = {
    'A': ['B', 'C', 'D'],
    'B': ['A', 'E'],
    'C': ['A', 'E'],
    'D': ['A', 'E'],
    'E': ['B', 'C', 'D']
}
start_node = 'A'  # Replace 'A' with 's' if your source is 's'
dfs_result = dfs(graph, start_node)
print(f"DFS traversal starting from {start_node}: {dfs_result}")
